-- baitap 1--
  with table_1 as (
SELECT 
  count(job_id) job_count,
  title,
  description,
  company_Id
FROM job_listings
group by 2,3,4
)
select count(distinct company_id) as duplicated_company
from table_1
where job_count>1

  -- baitap 2--
select 
  category, 
  product,
  total_spend
from 
( SELECT
  category,
  product,
  sum(spend) as total_spend,
  dense_rank () over(partition by category order by sum(spend) desc) as ranking
FROM product_spend
where extract(year from transaction_date) ='2022'
group by 1,2
) as t1
where ranking <=2
order by category, ranking 

--bai tap 3--

  WITH call_records AS (
SELECT
  policy_holder_id,
  COUNT(case_id) AS call_count
FROM callers
GROUP BY policy_holder_id
HAVING COUNT(case_id) >= 3
)

SELECT COUNT(policy_holder_id) AS member_count
FROM call_records

--bai tap 4--
  select distinct a.page_id
from pages a
where not EXISTS
(select b.page_Id
from page_likes b
where a.page_id = b.page_id)
order by 1 asc

--baitap 5--

  with t1 as (
SELECT  user_id	
from user_actions 
where EXTRACT(month from event_date) in (6,7) 
and EXTRACT(year from event_date) = 2022 
GROUP BY user_id 
having count(DISTINCT extract(month from event_date)) =2)

select 7 as month,
count(*) as monthly_active_users
from t1

  --baitap6--
  select 
date_format(trans_date, '%Y-%m') as month, 
country,
 count(id) as trans_count, 
sum(case when state = 'approved' then 1 else 0 end) as approved_count,
 sum(amount) as trans_total_amount, 
sum(case when state = 'approved' then amount else 0 end) as approved_total_amount from transactions group by month, country

--câu này mình nếu mình dùng cte thì sẽ làm như nào ạ TT--

  --baitap 7--
  c1: cách này ra kq đúng nhma xét về tính logic như vậy có hợp chưa ạ
  select
    distinct a.product_id,
    min(a.year) as first_year,
    a.quantity,
    a.price
from sales a
left join product b
on a.product_id = b.product_id
group by 1

  c2:
  with t1 as
(SELECT product_id, 
min(year) min_year
FROM sales
GROUP BY product_id) 
select 
    t1.product_id,
    t1.min_year as first_year,
    a.quantity,
    a.price
from sales a
join t1 
on t1.min_year = a.year and t1.product_id = a.product_id

  --bai tap 8--
      select 
customer_id
from customer
group by 1
having count(distinct(product_key)) = (select count(product_key) from product)

  --baitap 9--
      select 
employee_id
from employees
where salary <30000
and manager_id not in (select employee_id
                           from employees
                           )

  --baitap 10--
      
  select count(distinct company_id) as dumplicated_companies
from(
SELECT 
    company_id, 
    title, 
    description, 
    COUNT(job_id) AS job_count
  FROM job_listings
  GROUP BY company_id, title, description
) t1
where job_count >1
      
  --baitap 11--

  (SELECT b.name AS results
FROM MovieRating a
JOIN Users b
on a.user_id = b.user_id
GROUP BY 1
ORDER BY COUNT(*) DESC,b. name
LIMIT 1)

UNION ALL

(SELECT c.title AS results
FROM MovieRating a
JOIN Movies c
on a.movie_id = c.movie_id
WHERE EXTRACT(YEAR FROM created_at) = 2020
and EXTRACT(month FROM created_at) = 2
GROUP BY title
ORDER BY AVG(rating) DESC, c.title
LIMIT 1);
-- nếu câu này dùng cte thì cách làm sẽ như nào ạ TT --

  --bai tap 12--
select id, count(*) as num
from(
select 
requester_id id
from RequestAccepted
union all
select accepter_id
from   RequestAccepted
) t1
group by id
order by num desc
limit 1

